Compile time error - the java compiler can't compile the code, often because of syntax errors. Typical candidates:
	- missing brackets
	- missing semicolons
	- access to private fields in other classes
	- missing classes on the classpath (at compile time)

Runtime error - the code did compile, can be executed but crashes at some point, like you have a division by zero.
	- using variable that are actually null (may cause NullPointerException)
	- using illegal indexes on arrays
	- accessing ressources that are currently unavailable (missing files, ...)
	- missing classes on the classpath (at runtime)

Interface constant
	- An interface constant is implicitly public, static and final. 
	- such interface constants can be referenced in two ways:
		1. via reference from instance of the interface
		2. via the class name of the interface itself

	eg. interface Foo141 
		{ 
		    int k = 0; /* Line 3 */
		} 
		public class Test141 implements Foo141 
		{
		    public static void main(String args[]) 
		    {
		        int i; 
		        Test141 test141 = new Test141(); 
		        i = test141.k; /* Line 11 */ // These
		        i = Test141.k; 				 // All
		        i = Foo141.k; 				 //	Work
		    } 
		}